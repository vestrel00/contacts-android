DO NOT COMMIT THIS FILE TO MAIN!

This file will be deleted when all of the following items have been checked/removed.

------------------------

Mentions of "account" in docs

grep --include="*kt" -ri "account" .

./docs/profile/query-profile.md:## Specifying Accounts
./docs/profile/query-profile.md:To only include RawContacts associated with one of the given accounts,
./docs/profile/query-profile.md:.accounts(accounts)
./docs/profile/query-profile.md:For example, to include only RawContacts belonging to only one account,
./docs/profile/query-profile.md:.accounts(Account("john.doe@gmail.com", "com.google"))
./docs/profile/query-profile.md:> ℹ️ For more info, read [Query for Accounts](./../accounts/query-accounts.md).
./docs/profile/query-profile.md:The RawContacts returned will only belong to the specified accounts.
./docs/profile/query-profile.md:If no accounts are specified (this function is not called or called with no Accounts), then all
./docs/profile/query-profile.md:A null Account may be provided here, which results in RawContacts with no associated Account to be
./docs/profile/query-profile.md:included. RawContacts without an associated account are considered local contacts or device-only


./docs/accounts/query-accounts.md:# Query for Accounts
./docs/accounts/query-accounts.md:This library provides the `AccountsQuery` API that allows you to retrieve `Account`s from the
./docs/accounts/query-accounts.md:`AccountManager`.
./docs/accounts/query-accounts.md:An instance of the `AccountsQuery` API is obtained by,
./docs/accounts/query-accounts.md:val query = Contacts(context).accounts().query()
./docs/accounts/query-accounts.md:To get all available accounts in the system,
./docs/accounts/query-accounts.md:val accounts = Contacts(context).accounts().query()
./docs/accounts/query-accounts.md:To get all available accounts in the system with an account type of "com.google" or "com.yahoo",
./docs/accounts/query-accounts.md:val accounts = Contacts(context).accounts().query()
./docs/accounts/query-accounts.md:To get the account for a set of RawContacts,
./docs/accounts/query-accounts.md:val account = Contacts(context).accounts().query()
./docs/accounts/query-accounts.md:To get all available accounts in the system with an account type of "com.google" or "com.yahoo"
./docs/accounts/query-accounts.md:val accounts = Contacts(context).accounts().query()
./docs/accounts/query-accounts.md:> ℹ️ RawContacts that are not associated with an Account are local to the device. For more info,
./docs/accounts/query-accounts.md:## Account for each specified RawContact
./docs/accounts/query-accounts.md:the `Account` for each of the `RawContact` specified.
./docs/accounts/query-accounts.md:val rawContactAccount = accounts.accountFor(rawContact)
./docs/accounts/query-accounts.md:This allows you to get the accounts for multiple RawContacts in one API call =)
./docs/accounts/query-accounts.md:Queries require the `android.permission.READ_CONTACTS` and `android.permission.GET_ACCOUNTS`
./docs/accounts/query-accounts.md:## Profile accounts
./docs/accounts/query-accounts.md:The `AccountsQuery` API also supports querying the Profile (device owner) account. To get an
./docs/accounts/query-accounts.md:val query = Contacts(context).accounts().profile().query()
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:# Associate a local RawContact to an Account
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:This library provides the `AccountsLocalRawContactsUpdate` API, which allows you to associate
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:**local** RawContacts (those that are not associated with an Account) to an Account in order to
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:An instance of the `AccountsLocalRawContactsUpdate` API is obtained by,
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:val accountsLocalRawContactsUpdate = Contacts(context).accounts().updateLocalRawContactsAccount()
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:To associate/add the given local RawContacts to the given account,
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:val updateResult = accountsLocalRawContactsUpdate
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:     .addToAccount(account)
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:        INVALID_ACCOUNT -> handleInvalidAccount()
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:These updates require the `android.permission.GET_ACCOUNTS` and `android.permission.WRITE_CONTACTS`.
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:The `AccountsLocalRawContactsUpdate` API also supports updating the Profile (device owner)
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:val profileDataUpdate = Contacts(context).accounts().profile().updateLocalRawContactsAccount()
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:- Associate local RawContacts (those that are not associated with an Account) to an Account,
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:- Dissociate RawContacts from their Account such that they remain local to the device and not
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:- Transfer RawContacts from one Account to another.
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:This library supports modifying the `SyncColumns.ACCOUNT_NAME` and `SyncColumns.ACCOUNT_TYPE` of the
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:side-effects. It probably has something to do with syncing with remote servers and local Account /
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:The motivation behind changing the Account columns of the RawContacts table rows is that it would
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:- Associate local RawContacts (those that are not associated with an Account) to an Account,
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:- Dissociate RawContacts from their Account such that they remain local to the device and not synced
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:- Transfer RawContacts from one Account to another.
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:- Associating local RawContact A to Account X.
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:  - RawContact A is now associated with Account X and is synced across devices.
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:- Dissociating RawContact A (setting the SyncColumns' Account name and type to null) from Account X.
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:    membership to at least the default group from an Account.
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:  - If local RawContact A is re-associated back to Account X, it will still no longer be synced.
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:- Associating RawContact A from original Account X to Account Y.
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:    and syncing Account Y in system settings fails.
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:    Syncing Account Y in system settings succeeds.
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:Given that associating originally local RawContacts to an Account is the only thing that actually
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:If consumers want to transfer RawContacts from one Account to another, they can create a copy of a
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:RawContact associated with the desired Account and then delete the original RawContact. Same idea
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:can be used to transform an Account-associated RawContact to a local RawContact. Perhaps we can
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:   Account when the account changes. This occurs even if the group membership already exists
./docs/accounts/associate-device-local-raw-contacts-to-an-account.md:2. The Contacts Provider DOES NOT delete existing group memberships when the account changes.


./docs/customdata/integrate-custom-data.md:across devices and will remain local to the device regardless of Account sync settings. It is up to
./docs/customdata/integrate-custom-data.md:adapters. That is for you to implement based on your account services. This library provides you
./docs/customdata/integrate-custom-data.md:> To display your custom data, provide a `contacts.xml` file containing a `<ContactsAccountType>`
./docs/customdata/integrate-custom-data.md:<ContactsAccountType
./docs/customdata/integrate-custom-data.md:</ContactsAccountType>
./docs/customdata/integrate-custom-data.md:<ContactsAccountType xmlns:android="http://schemas.android.com/apk/res/android">
./docs/customdata/integrate-custom-data.md:</ContactsAccountType>
./docs/customdata/integrate-googlecontacts-custom-data.md:shown for RawContacts that are associated with a Google Account. Local (device-only) RawContacts do
./docs/customdata/integrate-googlecontacts-custom-data.md:these custom data should remain synced depending on account sync settings.


./docs/sim/about-sim-contacts.md:SyncAdapters. The RawContacts created in the Contacts Provider have a non-remote account name and
./docs/sim/about-sim-contacts.md:accountName: primary.sim.account_name, accountType: vnd.sec.contact.sim


./docs/data/query-data-sets.md:## Specifying Accounts
./docs/data/query-data-sets.md:To limit the search to only those data associated with one of the given accounts,
./docs/data/query-data-sets.md:.accounts(accounts)
./docs/data/query-data-sets.md:For example, to limit the search to data belonging to only one account,
./docs/data/query-data-sets.md:.accounts(Account("john.doe@gmail.com", "com.google"))
./docs/data/query-data-sets.md:> ℹ️ For more info, read [Query for Accounts](./../accounts/query-accounts.md).
./docs/data/query-data-sets.md:If no accounts are specified (this function is not called or called with no Accounts), then all
./docs/data/query-data-sets.md:A null Account may be provided here, which results in RawContacts with no associated Account to be
./docs/data/query-data-sets.md:included in the search. RawContacts without an associated account are considered local contacts or


./docs/logging/log-api-input-output.md:    rawContactsWhere: (account_name LIKE 'test@gmail.com' ESCAPE '\') AND (account_type LIKE 'com.google' ESCAPE '\')


./docs/entities/about-api-entities.md:    - Rows that link Contacts rows to specific Accounts.
./docs/entities/about-api-entities.md:    - Contains contact data that belong to an account.
./docs/entities/about-api-entities.md:## Data kinds Account restrictions
./docs/entities/about-api-entities.md:associated with an Account).
./docs/entities/about-api-entities.md:the account sync settings.
./docs/entities/about-api-entities.md:- `GroupMembership`, underlying value defaults to the account's default system group
./docs/entities/about-api-entities.md:RawContacts that are associated with an Account. If a valid account is provided, membership to the
./docs/entities/about-api-entities.md:If a valid account is not provided, no entries of the above are automatically created.
./docs/entities/about-contact-lookup-key.md:      to ensure that Contact data is synced per user account.
./docs/entities/about-contact-lookup-key.md:with an Account and are synced). The lookup key points to a person entity rather than just a row
./docs/entities/about-contact-lookup-key.md:## Moving RawContacts between accounts and the lookup key
./docs/entities/about-contact-lookup-key.md:Associating a local (device-only) RawContact to an Account will change the Contact lookup key. In
./docs/entities/about-contact-lookup-key.md:general, set a RawContact's Account to something else will change the lookup key. In these cases,
./docs/entities/about-contact-lookup-key.md:Changing a RawContact's Account will result in a failed lookup using lookup keys prior to the
./docs/entities/about-contact-lookup-key.md:Account change.
./docs/entities/about-contact-lookup-key.md:3. Change the RawContact's Account.
./docs/entities/about-contact-lookup-key.md:> ℹ️ For more info, read [Associate local RawContacts to an Account](./../accounts/associate-device-local-raw-contacts-to-an-account.md).
./docs/entities/about-contact-lookup-key.md:Account change.
./docs/entities/about-contact-lookup-key.md:with an Account and are synced).
./docs/entities/about-contact-lookup-key.md:Another thing to check is what happens when associating a local RawContact to an Account (move from
./docs/entities/about-contact-lookup-key.md:device to Account) and vice versa. Is the lookup key of the Contact affected?
./docs/entities/about-contact-lookup-key.md:After associating the local RawContact to an Account...
./docs/entities/about-contact-lookup-key.md:Removing the account from it results in...
./docs/entities/about-contact-lookup-key.md:moving between accounts in the future.
./docs/entities/sync-contact-data.md:the account sync settings. You can typically find these account sync settings via
./docs/entities/sync-contact-data.md:_Settings -> Accounts -> <account> -> Account sync -> "Contacts"_. Of course, in addition to having
./docs/entities/sync-contact-data.md:![Account sync settings](./../assets/images/account-sync-settings.png)
./docs/entities/sync-contact-data.md:When you have Contacts syncing enabled, as long as the `android.accounts.Account` has active sync
./docs/entities/sync-contact-data.md:adapters and remote services and you have network connection, data belonging to that account (e.g.
./docs/entities/sync-contact-data.md:"vestrel00@gmail.com" is a Google account) are synced across devices and online. This means that any
./docs/entities/sync-contact-data.md:that account.
./docs/entities/sync-contact-data.md:> ℹ️ Besides Google Accounts, there is also Samsung, Yahoo, MSN/Hotmail, etc.
./docs/entities/sync-contact-data.md:## Adding or removing Accounts
./docs/entities/sync-contact-data.md:When an Account is added to the system and Contacts syncing is enabled and there is network
./docs/entities/sync-contact-data.md:Groups that belong to that Account.
./docs/entities/sync-contact-data.md:Similarly, when an Account is removed from the system though regardless of Contacts syncing enabled
./docs/entities/sync-contact-data.md:Data, and Groups that belong to that Account.
./docs/entities/sync-contact-data.md:## Only contacts that are associated with an Account are synced
./docs/entities/sync-contact-data.md:More specifically, RawContacts that are not associated with an Account (local, device-only) are not
./docs/entities/sync-contact-data.md:synced. Syncing is account specific, which is why you must turn on Contact syncing in the system
./docs/entities/sync-contact-data.md:For example, data belonging to a RawContact that is associated with a Google account (e.g. Gmail)
./docs/entities/sync-contact-data.md:will be available anywhere the Google account is used; in any Android or iOS device, a web browser,
./docs/entities/sync-contact-data.md:depends on the account sync settings, which can be configured in the system settings app and
./docs/entities/sync-contact-data.md:sync events as long as Contacts sync is enabled for the Account in the system settings.
./docs/entities/sync-contact-data.md:- Adding an Account.
./docs/entities/sync-contact-data.md:- Removing an Account.
./docs/entities/sync-contact-data.md:- New lookup key is not assigned after associating a local RawContact to an Account.
./docs/entities/sync-contact-data.md:synced because they are not account specific and they have no sync adapters and no remote service
./docs/entities/sync-contact-data.md:library as it requires access to remote databases and account-specific data. Let's talk about it
./docs/entities/sync-contact-data.md:> device and upload existing data to a new account. Synchronization also ensures that users have
./docs/entities/sync-contact-data.md:> and content provider, but can handle multiple account names for the same service. The framework
./docs/entities/redact-apis-and-entities.md:    rawContactsWhere: (account_name LIKE 'test@gmail.com' ESCAPE '\') AND (account_type LIKE 'com.google' ESCAPE '\')
./docs/entities/redact-apis-and-entities.md:    rawContactsWhere: (account_name LIKE '*******************' ESCAPE '\') AND (account_type LIKE '**********' ESCAPE '\')